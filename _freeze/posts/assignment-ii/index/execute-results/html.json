{
  "hash": "7e8067cef0cd8b1aa003ddcf5c51abd3",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Assignment 2: COVID-19 Data Visualization\"\nauthor: \"Justice Kessie\"\ndate: \"2025-03-24\"\ncategories: [news, code, analysis]\nimage: \"image.png\"\n---\n\n\n\n\n\n## Description of Data\n\nThe covid_ts dataset tracks the daily counts of COVID-19 infections and deaths across U.S. states, broken down by different virus strains. It includes several key columns: the date, state, total infections, deaths, and daily case counts for each COVID-19 strain— *Original*, *Alpha*, *Delta*, and *Omicron*. The date column records the day of the entry, while the state column tells you which U.S. state the data pertains to. The total_infections column gives the overall count of COVID-19 cases, and deaths shows the number of lives lost to the virus. The strain-specific columns break down the daily cases for each variant: *Original*, *Alpha*, *Delta*, and *Omicron*.\n\nThe dataset begins in early 2020, during the first wave of the pandemic, and continues through the various waves caused by the emergence of new strains. These variants, like Alpha, Delta, and Omicron, had different levels of contagiousness and impacts on public health, which is reflected in their infection and death rates. For instance, the Alpha variant, emerging in late 2020, was more easily spread than the original strain, while Delta, which appeared in 2021, caused a major global surge. Omicron, emerging toward the end of 2021, was highly transmissible but led to fewer severe cases compared to previous strains.\n\nBy analyzing this dataset, we can track how each variant's dominance shifted over time and across regions. It provides insight into when and where each strain became the most prevalent, shedding light on regional variations in how COVID-19 spread. Additionally, the dataset allows us to explore how mortality rates changed with each variant. By comparing death counts for each strain, we can gain a better understanding of how the severity of the virus evolved. Overall, the dataset is a powerful tool for both public health policy makers and epidemiological researchers. It allows us to visualize how the virus spread geographically and how different variants impacted different regions at various times. For example, using pie charts, we can easily show the proportion of each strain in different states, offering a clear picture of how the pandemic unfolded across the U.S. over time.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Required packages\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(lubridate)\nlibrary(maps)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'maps'\n\nThe following object is masked from 'package:purrr':\n\n    map\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(gganimate)\nlibrary(gifski)\n```\n:::\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Print summary to verify strain distribution\nsummary_stats <- covid_ts %>%\n  group_by(state) %>%\n  summarise(\n    total_cases = sum(total_infections, na.rm = TRUE),\n    total_original = sum(Original, na.rm = TRUE),\n    total_alpha = sum(Alpha, na.rm = TRUE),\n    total_delta = sum(Delta, na.rm = TRUE),\n    total_omicron = sum(Omicron, na.rm = TRUE)\n  )\nprint(summary_stats)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 50 × 6\n   state       total_cases total_original total_alpha total_delta total_omicron\n   <chr>             <int>          <int>       <int>       <int>         <int>\n 1 Alabama          109464          65973       24933       13797          4761\n 2 Alaska           108849          65448       24783       13967          4651\n 3 Arizona          109706          66432       24675       14185          4414\n 4 Arkansas         110034          66695       24871       13712          4756\n 5 California       109250          66293       24476       13645          4836\n 6 Colorado         110071          66867       24662       13697          4845\n 7 Connecticut      108775          66106       24581       13492          4596\n 8 Delaware         109594          66129       25099       13758          4608\n 9 Florida          109377          65874       25061       13534          4908\n10 Georgia          110229          66426       24952       14088          4763\n# ℹ 40 more rows\n```\n\n\n:::\n:::\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create the visualization with updated aesthetics\np <- ggplot(map_data, aes(x = long, y = lat, group = piece_id)) +\n  geom_polygon(\n    aes(fill = strain),\n    color = \"white\",\n    linewidth = 0.2  # Updated from 'size' to 'linewidth'\n  ) +\n  coord_map(\"albers\", lat0 = 39, lat1 = 45) +\n  scale_fill_brewer(palette = \"Set3\") +\n  labs(\n    title = \"COVID-19 Strain Distribution in the United States\",\n    subtitle = \"Date: {frame_time}\",\n    fill = \"Dominant Strain\"\n  ) +\n  theme_minimal() +\n  theme(\n    legend.position = \"bottom\",\n    plot.title = element_text(size = 14, face = \"bold\"),\n    plot.subtitle = element_text(size = 12),\n    panel.grid = element_blank()  # Remove grid lines for cleaner map\n  ) +\n  transition_time(as.Date(paste(year, month, \"01\", sep = \"-\"))) +\n  ease_aes('linear')\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.gif)\n:::\n:::",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}